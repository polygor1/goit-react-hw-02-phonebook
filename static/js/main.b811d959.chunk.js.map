{"version":3,"sources":["components/Form.module.css","components/Form.js","components/Contacts.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","id","name","number","Form","state","inputId","nanoid","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","phonebook","this","form","htmlFor","type","pattern","title","required","onChange","Component","Contacts","App","contacts","formSubmitHandler","data","push","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,qB,kLCGvDC,EAAgB,CACpBC,GAAI,GACJC,KAAM,GACNC,OAAQ,IAGGC,EAAb,4MACEC,MADF,eACeL,GADf,EAGEM,QAAUC,cAHZ,EAKEC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,KAP5B,EAUEE,aAAe,SAAAJ,GACbA,EAAMK,iBAEN,EAAKC,MAAMC,SAAX,eAAyB,EAAKX,QAC9B,EAAKY,SAdT,EAiBEA,MAAQ,WACN,EAAKL,SAAL,eAAmBZ,KAlBvB,4CAqBE,WACE,OACE,sBAAKkB,UAAWC,IAAOC,UAAvB,UACE,4DAEA,uBAAMJ,SAAUK,KAAKR,aAAcK,UAAWC,IAAOG,KAArD,UACE,wBAAOC,QAASF,KAAKf,QAArB,UACE,sCACA,uBACEL,GAAIoB,KAAKf,QACTkB,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRhB,MAAOU,KAAKhB,MAAMH,KAClB0B,SAAUP,KAAKb,eAEjB,wCACA,uBACEP,GAAIoB,KAAKf,QACTkB,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRhB,MAAOU,KAAKhB,MAAMF,OAClByB,SAAUP,KAAKb,kBAGnB,wBAAQgB,KAAK,SAAb,mCAnDV,GAA0BK,aCLbC,EAAb,4JAGE,WACE,OACE,gCACE,4CACA,8BAPR,GAA8BD,aCExBE,E,4MACJ1B,MAAQ,CACN2B,SAAU,GACV9B,KAAM,GACNC,OAAQ,I,EAGV8B,kBAAoB,SAAAC,GAClBA,EAAKjC,GAAKM,cACV,EAAKF,MAAM2B,SAASG,KAAKD,GAEzBE,QAAQC,IAAI,WAAY,EAAKhC,MAAM2B,W,4CAIrC,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,cAAC,EAAD,CAAMF,SAAUK,KAAKY,oBACrB,cAAC,EAAD,CAAUlB,MAAOM,KAAKhB,MAAM2B,kB,GAnBlBH,aAyBHE,IC5BfO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b811d959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Form_phonebook__1UZff\",\"form\":\"Form_form__rsOcy\"};","import React, { Component } from 'react';\nimport styles from './Form.module.css';\nimport { nanoid } from 'nanoid';\n\nconst INITIAL_STATE = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nexport class Form extends Component {\n  state = { ...INITIAL_STATE };\n\n  inputId = nanoid();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // this.setState({ id: nanoid() });\n    this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <div className={styles.phonebook}>\n        <h1>goit-react-hw-02-phonebook</h1>\n\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label htmlFor={this.inputId}>\n            <h2>Name</h2>\n            <input\n              id={this.inputId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n            <h2>Number</h2>\n            <input\n              id={this.inputId}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n","// import styles from './Contacts.module.css';\nimport React, { Component } from 'react';\n\n// import PropTypes from 'prop-types';\n\nexport class Contacts extends Component {\n  // console.log('props', props);\n\n  render() {\n    return (\n      <div>\n        <h2> Contacts </h2>\n        <ul>\n          {/* {props.map(item => (\n          <li key={item.id}>\n            {item.name} {item.namber}\n          </li>\n        ))} */}\n        </ul>\n      </div>\n    );\n  }\n}\n\n// Statistics.propTypes = {\n//   good: PropTypes.number.isRequired,\n//   neutral: PropTypes.number.isRequired,\n//   bad: PropTypes.number.isRequired,\n//   total: PropTypes.number.isRequired,\n//   positivePercentage: PropTypes.number.isRequired,\n// };\n","import './App.css';\n\nimport { Component } from 'react';\nimport { Form } from './components/Form';\nimport { Contacts } from './components/Contacts';\nimport { nanoid } from 'nanoid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  formSubmitHandler = data => {\n    data.id = nanoid(); // здесь работает\n    this.state.contacts.push(data);\n\n    console.log('contacts', this.state.contacts);\n    // Contacts(this.state.contacts);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form onSubmit={this.formSubmitHandler} />\n        <Contacts props={this.state.contacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}